mergedPeaks <- reduce(bothPeaks)
healthy1 <- paste(currPath, h1[i], "_", marks[i], "_GRCh38.bigBed", sep = "")
healthy2 <- paste(currPath, h2[i], "_", marks[i], "_GRCh38.bigBed", sep = "")
print(healthy1)
print(healthy2)
}
mergedPeaks
marks <- c("H3K4Me3", "H3K9Me3", "H3K27Ac", "H3K27Me3")
h1 <- c("F27", "F43", "F27", "F27")
h2 <- c("F43", "M37", "M37", "M37")
for (i in 1:4) {
print(marks[i])
path <- "ENCODE_peaks/MARK/"
currPath <- sub("MARK", marks[i], path)
print(currPath)
diseased1 <- paste(currPath, "MM.1S_", marks[i], "_GRCh38.bigBed", sep = "")
diseased2 <- paste(currPath, "H929_", marks[i], "_GRCh38.bigBed", sep = "")
print(diseased1)
print(diseased2)
peaksD1 <- rtracklayer::import(diseased1)
peaksD2 <- rtracklayer::import(diseased2)
# Merge peaks
bothPeaks <- c(peaksD1, peaksD2)
mergedPeaks <- reduce(bothPeaks)
exportPath <- paste(currPath, "Diseased_", marks[i], "_GRCh38.bigBed", sep = "")
rtracklayer::export(mergedPeaks, exportPath)
healthy1 <- paste(currPath, h1[i], "_", marks[i], "_GRCh38.bigBed", sep = "")
healthy2 <- paste(currPath, h2[i], "_", marks[i], "_GRCh38.bigBed", sep = "")
print(healthy1)
print(healthy2)
}
mergedPeaks$score
mergedPeaks
peaksD1
peaksD1$pValue
colnames(peaksD1)
peaksD1
peaksD2
mergedPeaks
?reduce
marks <- c("H3K4Me3", "H3K9Me3", "H3K27Ac", "H3K27Me3")
h1 <- c("F27", "F43", "F27", "F27")
h2 <- c("F43", "M37", "M37", "M37")
for (i in 1:4) {
print(marks[i])
path <- "ENCODE_peaks/MARK/"
currPath <- sub("MARK", marks[i], path)
print(currPath)
diseased1 <- paste(currPath, "MM.1S_", marks[i], "_GRCh38.bigBed", sep = "")
diseased2 <- paste(currPath, "H929_", marks[i], "_GRCh38.bigBed", sep = "")
print(diseased1)
print(diseased2)
peaksD1 <- rtracklayer::import(diseased1)
peaksD2 <- rtracklayer::import(diseased2)
# Merge peaks
bothPeaks <- c(peaksD1, peaksD2)
mergedPeaks <- reduce(bothPeaks)
exportPath <- paste(currPath, "Diseased_", marks[i], "_GRCh38.bigBed", sep = "")
rtracklayer::export.bed(mergedPeaks, exportPath)
healthy1 <- paste(currPath, h1[i], "_", marks[i], "_GRCh38.bigBed", sep = "")
healthy2 <- paste(currPath, h2[i], "_", marks[i], "_GRCh38.bigBed", sep = "")
print(healthy1)
print(healthy2)
}
marks <- c("H3K4Me3", "H3K9Me3", "H3K27Ac", "H3K27Me3")
h1 <- c("F27", "F43", "F27", "F27")
h2 <- c("F43", "M37", "M37", "M37")
for (i in 1:4) {
print(marks[i])
path <- "ENCODE_peaks/MARK/"
currPath <- sub("MARK", marks[i], path)
print(currPath)
diseased1 <- paste(currPath, "MM.1S_", marks[i], "_GRCh38.bigBed", sep = "")
diseased2 <- paste(currPath, "H929_", marks[i], "_GRCh38.bigBed", sep = "")
print(diseased1)
print(diseased2)
peaksD1 <- rtracklayer::import(diseased1)
peaksD2 <- rtracklayer::import(diseased2)
# Merge peaks
bothPeaks <- c(peaksD1, peaksD2)
mergedPeaks <- reduce(bothPeaks)
exportPath <- paste(currPath, "Diseased_", marks[i], "_GRCh38.bigBed", sep = "")
rtracklayer::export.bb(mergedPeaks, exportPath)
healthy1 <- paste(currPath, h1[i], "_", marks[i], "_GRCh38.bigBed", sep = "")
healthy2 <- paste(currPath, h2[i], "_", marks[i], "_GRCh38.bigBed", sep = "")
print(healthy1)
print(healthy2)
}
marks <- c("H3K4Me3", "H3K9Me3", "H3K27Ac", "H3K27Me3")
h1 <- c("F27", "F43", "F27", "F27")
h2 <- c("F43", "M37", "M37", "M37")
for (i in 1:4) {
print(marks[i])
path <- "ENCODE_peaks/MARK/"
currPath <- sub("MARK", marks[i], path)
print(currPath)
diseased1 <- paste(currPath, "MM.1S_", marks[i], "_GRCh38.bigBed", sep = "")
diseased2 <- paste(currPath, "H929_", marks[i], "_GRCh38.bigBed", sep = "")
print(diseased1)
print(diseased2)
peaksD1 <- rtracklayer::import(diseased1)
peaksD2 <- rtracklayer::import(diseased2)
# Merge peaks
bothPeaks <- c(peaksD1, peaksD2)
mergedPeaks <- reduce(bothPeaks)
exportPath <- paste(currPath, "Diseased_", marks[i], "_GRCh38.bigBed", sep = "")
rtracklayer::export.bed(mergedPeaks, exportPath)
healthy1 <- paste(currPath, h1[i], "_", marks[i], "_GRCh38.bigBed", sep = "")
healthy2 <- paste(currPath, h2[i], "_", marks[i], "_GRCh38.bigBed", sep = "")
print(healthy1)
print(healthy2)
}
marks <- c("H3K4Me3", "H3K9Me3", "H3K27Ac", "H3K27Me3")
h1 <- c("F27", "F43", "F27", "F27")
h2 <- c("F43", "M37", "M37", "M37")
for (i in 1:4) {
print(marks[i])
path <- "ENCODE_peaks/MARK/"
currPath <- sub("MARK", marks[i], path)
print(currPath)
diseased1 <- paste(currPath, "MM.1S_", marks[i], "_GRCh38.bigBed", sep = "")
diseased2 <- paste(currPath, "H929_", marks[i], "_GRCh38.bigBed", sep = "")
print(diseased1)
print(diseased2)
peaksD1 <- rtracklayer::import(diseased1)
peaksD2 <- rtracklayer::import(diseased2)
# Merge peaks
bothPeaks <- c(peaksD1, peaksD2)
mergedPeaks <- reduce(bothPeaks)
exportPath <- paste(currPath, "Diseased_", marks[i], "_GRCh38.bigBed", sep = "")
rtracklayer::export(mergedPeaks, exportPath)
healthy1 <- paste(currPath, h1[i], "_", marks[i], "_GRCh38.bigBed", sep = "")
healthy2 <- paste(currPath, h2[i], "_", marks[i], "_GRCh38.bigBed", sep = "")
print(healthy1)
print(healthy2)
}
mergedPeaks
mergedPeaks$score <- 1000
mergedPeaks
marks <- c("H3K4Me3", "H3K9Me3", "H3K27Ac", "H3K27Me3")
h1 <- c("F27", "F43", "F27", "F27")
h2 <- c("F43", "M37", "M37", "M37")
for (i in 1:4) {
print(marks[i])
path <- "ENCODE_peaks/MARK/"
currPath <- sub("MARK", marks[i], path)
print(currPath)
diseased1 <- paste(currPath, "MM.1S_", marks[i], "_GRCh38.bigBed", sep = "")
diseased2 <- paste(currPath, "H929_", marks[i], "_GRCh38.bigBed", sep = "")
print(diseased1)
print(diseased2)
peaksD1 <- rtracklayer::import(diseased1)
peaksD2 <- rtracklayer::import(diseased2)
# Merge peaks
bothPeaks <- c(peaksD1, peaksD2)
mergedPeaks <- reduce(bothPeaks)
mergedPeaks$score <- 1000
exportPath <- paste(currPath, "Diseased_", marks[i], "_GRCh38.bigBed", sep = "")
rtracklayer::export(mergedPeaks, exportPath)
healthy1 <- paste(currPath, h1[i], "_", marks[i], "_GRCh38.bigBed", sep = "")
healthy2 <- paste(currPath, h2[i], "_", marks[i], "_GRCh38.bigBed", sep = "")
print(healthy1)
print(healthy2)
}
marks <- c("H3K4Me3", "H3K9Me3", "H3K27Ac", "H3K27Me3")
h1 <- c("F27", "F43", "F27", "F27")
h2 <- c("F43", "M37", "M37", "M37")
for (i in 1:4) {
print(marks[i])
path <- "ENCODE_peaks/MARK/"
currPath <- sub("MARK", marks[i], path)
print(currPath)
diseased1 <- paste(currPath, "MM.1S_", marks[i], "_GRCh38.bigBed", sep = "")
diseased2 <- paste(currPath, "H929_", marks[i], "_GRCh38.bigBed", sep = "")
print(diseased1)
print(diseased2)
peaksD1 <- rtracklayer::import(diseased1)
peaksD2 <- rtracklayer::import(diseased2)
# Merge peaks
bothPeaks <- c(peaksD1, peaksD2)
mergedPeaks <- reduce(bothPeaks)
mergedPeaks$score <- 1000
exportPath <- paste(currPath, "Diseased_", marks[i], "_GRCh38.bigBed", sep = "")
rtracklayer::export(mergedPeaks, exportPath)
healthy1 <- paste(currPath, h1[i], "_", marks[i], "_GRCh38.bigBed", sep = "")
healthy2 <- paste(currPath, h2[i], "_", marks[i], "_GRCh38.bigBed", sep = "")
print(healthy1)
print(healthy2)
peaksH1 <- rtracklayer::import(diseased1)
peaksH2 <- rtracklayer::import(diseased2)
# Merge peaks
bothPeaks <- c(peaksH1, peaksH2)
mergedPeaks <- reduce(bothPeaks)
mergedPeaks$score <- 1000
exportPath <- paste(currPath, "Healthy_", marks[i], "_GRCh38.bigBed", sep = "")
rtracklayer::export(mergedPeaks, exportPath)
}
marks <- c("H3K4Me3", "H3K9Me3", "H3K27Ac", "H3K27Me3")
h1 <- c("F27", "F43", "F27", "F27")
h2 <- c("F43", "M37", "M37", "M37")
for (i in 1:4) {
print(marks[i])
path <- "ENCODE_peaks/MARK/"
currPath <- sub("MARK", marks[i], path)
print(currPath)
diseased1 <- paste(currPath, "MM.1S_", marks[i], "_GRCh38.bigBed", sep = "")
diseased2 <- paste(currPath, "H929_", marks[i], "_GRCh38.bigBed", sep = "")
print(diseased1)
print(diseased2)
peaksD1 <- rtracklayer::import(diseased1)
peaksD2 <- rtracklayer::import(diseased2)
# Merge peaks
bothPeaks <- c(peaksD1, peaksD2)
mergedPeaks <- reduce(bothPeaks)
mergedPeaks$score <- 1000
exportPath <- paste(currPath, "Diseased_", marks[i], "_GRCh38.bigBed", sep = "")
rtracklayer::export(mergedPeaks, exportPath)
healthy1 <- paste(currPath, h1[i], "_", marks[i], "_GRCh38.bigBed", sep = "")
healthy2 <- paste(currPath, h2[i], "_", marks[i], "_GRCh38.bigBed", sep = "")
print(healthy1)
print(healthy2)
peaksH1 <- rtracklayer::import(healthy1)
peaksH2 <- rtracklayer::import(healthy2)
# Merge peaks
bothPeaks <- c(peaksH1, peaksH2)
mergedPeaks <- reduce(bothPeaks)
mergedPeaks$score <- 1000
exportPath <- paste(currPath, "Healthy_", marks[i], "_GRCh38.bigBed", sep = "")
rtracklayer::export(mergedPeaks, exportPath)
}
marks <- c("H3K4Me3", "H3K9Me3", "H3K27Ac", "H3K27Me3")
h1 <- c("F27", "F43", "F27", "F27")
h2 <- c("F43", "M37", "M37", "M37")
for (i in 1:4) {
print(marks[i])
path <- "ENCODE_peaks/MARK/"
currPath <- sub("MARK", marks[i], path)
print(currPath)
diseased1 <- paste(currPath, "MM.1S_", marks[i], "_GRCh38.bigBed", sep = "")
diseased2 <- paste(currPath, "H929_", marks[i], "_GRCh38.bigBed", sep = "")
print(diseased1)
print(diseased2)
peaksD1 <- rtracklayer::import(diseased1)
peaksD2 <- rtracklayer::import(diseased2)
# Merge peaks
bothPeaks <- c(peaksD1, peaksD2)
mergedPeaks <- reduce(bothPeaks)
mergedPeaks$score <- 1000
exportPath <- paste(currPath, "Diseased_", marks[i], "_GRCh38.bigBed", sep = "")
rtracklayer::export(mergedPeaks, exportPath)
healthy1 <- paste(currPath, h1[i], "_", marks[i], "_GRCh38.bigBed", sep = "")
healthy2 <- paste(currPath, h2[i], "_", marks[i], "_GRCh38.bigBed", sep = "")
print(healthy1)
print(healthy2)
peaksH1 <- rtracklayer::import(healthy1)
peaksH2 <- rtracklayer::import(healthy2)
# Merge peaks
bothPeaks <- c(peaksH1, peaksH2)
mergedPeaks <- reduce(bothPeaks)
mergedPeaks$score <- 1000
exportPath <- paste(currPath, "Healthy_", marks[i], "_GRCh38.bigBed", sep = "")
rtracklayer::export(mergedPeaks, exportPath)
}
marks <- c("H3K4Me3", "H3K9Me3", "H3K27Ac", "H3K27Me3")
h1 <- c("F27", "F43", "F27", "F27")
h2 <- c("F43", "M37", "M37", "M37")
for (i in 1:4) {
print(marks[i])
path <- "ENCODE_peaks/MARK/"
currPath <- sub("MARK", marks[i], path)
print(currPath)
diseased1 <- paste(currPath, "MM.1S_", marks[i], "_GRCh38.bigBed_chr1", sep = "")
diseased2 <- paste(currPath, "H929_", marks[i], "_GRCh38.bigBed_chr1", sep = "")
print(diseased1)
print(diseased2)
peaksD1 <- rtracklayer::import(diseased1)
peaksD2 <- rtracklayer::import(diseased2)
# Merge peaks
bothPeaks <- c(peaksD1, peaksD2)
mergedPeaks <- reduce(bothPeaks)
mergedPeaks$score <- 1000
exportPath <- paste(currPath, "Diseased_", marks[i], "_GRCh38_chr1.bigBed", sep = "")
rtracklayer::export(mergedPeaks, exportPath)
healthy1 <- paste(currPath, h1[i], "_", marks[i], "_GRCh38.bigBed_chr1", sep = "")
healthy2 <- paste(currPath, h2[i], "_", marks[i], "_GRCh38.bigBed_chr1", sep = "")
print(healthy1)
print(healthy2)
peaksH1 <- rtracklayer::import(healthy1)
peaksH2 <- rtracklayer::import(healthy2)
# Merge peaks
bothPeaks <- c(peaksH1, peaksH2)
mergedPeaks <- reduce(bothPeaks)
mergedPeaks$score <- 1000
exportPath <- paste(currPath, "Healthy_", marks[i], "_GRCh38_chr1.bigBed", sep = "")
rtracklayer::export(mergedPeaks, exportPath)
}
marks <- c("H3K4Me3", "H3K9Me3", "H3K27Ac", "H3K27Me3")
h1 <- c("F27", "F43", "F27", "F27")
h2 <- c("F43", "M37", "M37", "M37")
for (i in 1:4) {
print(marks[i])
path <- "ENCODE_peaks/MARK/"
currPath <- sub("MARK", marks[i], path)
print(currPath)
diseased1 <- paste(currPath, "MM.1S_", marks[i], "_GRCh38_chr1.bigBed", sep = "")
diseased2 <- paste(currPath, "H929_", marks[i], "_GRCh38_chr1.bigBed", sep = "")
print(diseased1)
print(diseased2)
peaksD1 <- rtracklayer::import(diseased1)
peaksD2 <- rtracklayer::import(diseased2)
# Merge peaks
bothPeaks <- c(peaksD1, peaksD2)
mergedPeaks <- reduce(bothPeaks)
mergedPeaks$score <- 1000
exportPath <- paste(currPath, "Diseased_", marks[i], "_GRCh38_chr1.bigBed", sep = "")
rtracklayer::export(mergedPeaks, exportPath)
healthy1 <- paste(currPath, h1[i], "_", marks[i], "_GRCh38_chr1.bigBed", sep = "")
healthy2 <- paste(currPath, h2[i], "_", marks[i], "_GRCh38_chr1.bigBed", sep = "")
print(healthy1)
print(healthy2)
peaksH1 <- rtracklayer::import(healthy1)
peaksH2 <- rtracklayer::import(healthy2)
# Merge peaks
bothPeaks <- c(peaksH1, peaksH2)
mergedPeaks <- reduce(bothPeaks)
mergedPeaks$score <- 1000
exportPath <- paste(currPath, "Healthy_", marks[i], "_GRCh38_chr1.bigBed", sep = "")
rtracklayer::export(mergedPeaks, exportPath)
}
peakstest <- rtracklayer::import("ENCODE_peaks/H3K4Me3/Diseased_H3K4Me3_GRCh38_chr1.bigBed")
peakstest
test <- seqnames(peakstest)
test
?regionOverlaps
knitr::opts_chunk$set(echo = TRUE)
suppressPackageStartupMessages({
library(epiwraps)
library(rtracklayer)
library(GenomicRanges)
})
disChr1H3K4Me3 <- rtracklayer::import("Diseased_H3K4Me3_GRCh38_chr1.bigBed")
disChr1H3K4Me3 <- rtracklayer::import("ENCODE_peaks/H3K4Me3/Diseased_H3K4Me3_GRCh38_chr1.bigBed")
disChr1H3K27Me3 <- rtracklayer::import("ENCODE_peaks/H3K27Me3/Diseased_H3K27Me3_GRCh38_chr1.bigBed")
disChr1H3K27Me3
disChr1H3K4Me3
?overlapsAny
?regionUpset
both <- c(disChr1H3K4Me3, disChr1H3K27Me3)
both <- c(disChr1H3K4Me3, disChr1H3K27Me3)
c(disChr1H3K4Me3, disChr1H3K27Me3)
test <- overlapsAny(disChr1H3K4Me3, disChr1H3K27Me3)
table(test)
disChr1H3K4Me3 <- rtracklayer::import("ENCODE_peaks/H3K4Me3/Diseased_H3K4Me3_GRCh38_chr1.bigBed")
disChr1H3K27Me3 <- rtracklayer::import("ENCODE_peaks/H3K27Me3/Diseased_H3K27Me3_GRCh38_chr1.bigBed")
test <- overlapsAny(disChr1H3K4Me3, disChr1H3K27Me3)
table(test)
test <- overlapsAny(disChr1H3K27Me3, disChr1H3K4Me3)
table(test)
#regionOverlaps(both, ignore.strand = TRUE)
test[1]
test[2]
?regionUpset
disChr1H3K4Me3 <- rtracklayer::import("ENCODE_peaks/H3K4Me3/Diseased_H3K4Me3_GRCh38_chr1.bigBed")
disChr1H3K9Me3 <- rtracklayer::import("ENCODE_peaks/H3K9Me3/Diseased_H3K9Me3_GRCh38_chr1.bigBed")
disChr1H3K27Ac <- rtracklayer::import("ENCODE_peaks/H3K27Ac/Diseased_H3K27Ac_GRCh38_chr1.bigBed")
disChr1H3K27Me3 <- rtracklayer::import("ENCODE_peaks/H3K27Me3/Diseased_H3K27Me3_GRCh38_chr1.bigBed")
helChr1H3K4Me3 <- rtracklayer::import("ENCODE_peaks/H3K4Me3/Healthy_H3K4Me3_GRCh38_chr1.bigBed")
helChr1H3K9Me3 <- rtracklayer::import("ENCODE_peaks/H3K9Me3/Healthy_H3K9Me3_GRCh38_chr1.bigBed")
helChr1H3K27Ac <- rtracklayer::import("ENCODE_peaks/H3K27Ac/Healthy_H3K27Ac_GRCh38_chr1.bigBed")
helChr1H3K27Me3 <- rtracklayer::import("ENCODE_peaks/H3K27Me3/Healthy_H3K27Me3_GRCh38_chr1.bigBed")
peaks <- c(disChr1H3K4Me3, disChr1H3K9Me3, disChr1H3K27Ac, disChr1H3K27Me3)
test <- c("ENCODE_peaks/H3K4Me3/Diseased_H3K4Me3_GRCh38_chr1.bigBed", "ENCODE_peaks/H3K9Me3/Diseased_H3K9Me3_GRCh38_chr1.bigBed", "ENCODE_peaks/H3K27Ac/Diseased_H3K27Ac_GRCh38_chr1.bigBed", "ENCODE_peaks/H3K27Me3/Diseased_H3K27Me3_GRCh38_chr1.bigBed", "ENCODE_peaks/H3K4Me3/Healthy_H3K4Me3_GRCh38_chr1.bigBed", "ENCODE_peaks/H3K9Me3/Healthy_H3K9Me3_GRCh38_chr1.bigBed", "ENCODE_peaks/H3K27Ac/Healthy_H3K27Ac_GRCh38_chr1.bigBed", "ENCODE_peaks/H3K27Me3/Healthy_H3K27Me3_GRCh38_chr1.bigBed")
regionUpset(test)
disChr1H3K4Me3 <- rtracklayer::import("ENCODE_peaks/H3K4Me3/MM.1S_H3K4Me3_GRCh38_chr1.bigBed")
disChr1H3K9Me3 <- rtracklayer::import("ENCODE_peaks/H3K9Me3/MM.1S_H3K9Me3_GRCh38_chr1.bigBed")
disChr1H3K27Ac <- rtracklayer::import("ENCODE_peaks/H3K27Ac/MM.1S_H3K27Ac_GRCh38_chr1.bigBed")
disChr1H3K27Me3 <- rtracklayer::import("ENCODE_peaks/H3K27Me3/MM.1S_H3K27Me3_GRCh38_chr1.bigBed")
helChr1H3K4Me3 <- rtracklayer::import("ENCODE_peaks/H3K4Me3/Healthy_H3K4Me3_GRCh38_chr1.bigBed")
helChr1H3K9Me3 <- rtracklayer::import("ENCODE_peaks/H3K9Me3/Healthy_H3K9Me3_GRCh38_chr1.bigBed")
helChr1H3K27Ac <- rtracklayer::import("ENCODE_peaks/H3K27Ac/Healthy_H3K27Ac_GRCh38_chr1.bigBed")
helChr1H3K27Me3 <- rtracklayer::import("ENCODE_peaks/H3K27Me3/Healthy_H3K27Me3_GRCh38_chr1.bigBed")
peaks <- c(disChr1H3K4Me3, disChr1H3K9Me3, disChr1H3K27Ac, disChr1H3K27Me3)
#regionUpset(test)
disChr1H3K27Me3
disChr1H3K4Me3 <- rtracklayer::import("ENCODE_peaks/H3K4Me3/MM.1S_H3K4Me3_GRCh38_chr1.bigBed")
disChr1H3K9Me3 <- rtracklayer::import("ENCODE_peaks/H3K9Me3/MM.1S_H3K9Me3_GRCh38_chr1.bigBed")
disChr1H3K27Ac <- rtracklayer::import("ENCODE_peaks/H3K27Ac/MM.1S_H3K27Ac_GRCh38_chr1.bigBed")
disChr1H3K27Me3 <- rtracklayer::import("ENCODE_peaks/H3K27Me3/MM.1S_H3K27Me3_GRCh38_chr1.bigBed")
helChr1H3K4Me3 <- rtracklayer::import("ENCODE_peaks/H3K4Me3/Healthy_H3K4Me3_GRCh38_chr1.bigBed")
helChr1H3K9Me3 <- rtracklayer::import("ENCODE_peaks/H3K9Me3/Healthy_H3K9Me3_GRCh38_chr1.bigBed")
helChr1H3K27Ac <- rtracklayer::import("ENCODE_peaks/H3K27Ac/Healthy_H3K27Ac_GRCh38_chr1.bigBed")
helChr1H3K27Me3 <- rtracklayer::import("ENCODE_peaks/H3K27Me3/Healthy_H3K27Me3_GRCh38_chr1.bigBed")
peaks <- c(disChr1H3K4Me3, disChr1H3K9Me3, disChr1H3K27Ac, disChr1H3K27Me3)
#regionUpset(test)
disChr1H3K4Me3 <- rtracklayer::import("ENCODE_peaks/H3K4Me3/MM.1S_H3K4Me3_GRCh38_chr1.bigBed")
disChr1H3K9Me3 <- rtracklayer::import("ENCODE_peaks/H3K9Me3/MM.1S_H3K9Me3_GRCh38_chr1.bigBed")
disChr1H3K27Ac <- rtracklayer::import("ENCODE_peaks/H3K27Ac/MM.1S_H3K27Ac_GRCh38_chr1.bigBed")
disChr1H3K27Me3 <- rtracklayer::import("ENCODE_peaks/H3K27Me3/MM.1S_H3K27Me3_GRCh38_chr1.bigBed")
helChr1H3K4Me3 <- rtracklayer::import("ENCODE_peaks/H3K4Me3/Healthy_H3K4Me3_GRCh38_chr1.bigBed")
helChr1H3K9Me3 <- rtracklayer::import("ENCODE_peaks/H3K9Me3/Healthy_H3K9Me3_GRCh38_chr1.bigBed")
helChr1H3K27Ac <- rtracklayer::import("ENCODE_peaks/H3K27Ac/Healthy_H3K27Ac_GRCh38_chr1.bigBed")
helChr1H3K27Me3 <- rtracklayer::import("ENCODE_peaks/H3K27Me3/Healthy_H3K27Me3_GRCh38_chr1.bigBed")
peaks <- c(disChr1H3K4Me3, disChr1H3K9Me3, disChr1H3K27Ac, disChr1H3K27Me3, helChr1H3K4Me3)
disChr1H3K4Me3 <- rtracklayer::import("ENCODE_peaks/H3K4Me3/MM.1S_H3K4Me3_GRCh38_chr1.bigBed")
disChr1H3K9Me3 <- rtracklayer::import("ENCODE_peaks/H3K9Me3/MM.1S_H3K9Me3_GRCh38_chr1.bigBed")
disChr1H3K27Ac <- rtracklayer::import("ENCODE_peaks/H3K27Ac/MM.1S_H3K27Ac_GRCh38_chr1.bigBed")
disChr1H3K27Me3 <- rtracklayer::import("ENCODE_peaks/H3K27Me3/MM.1S_H3K27Me3_GRCh38_chr1.bigBed")
helChr1H3K4Me3 <- rtracklayer::import("ENCODE_peaks/H3K4Me3/Healthy_H3K4Me3_GRCh38_chr1.bigBed")
helChr1H3K9Me3 <- rtracklayer::import("ENCODE_peaks/H3K9Me3/Healthy_H3K9Me3_GRCh38_chr1.bigBed")
helChr1H3K27Ac <- rtracklayer::import("ENCODE_peaks/H3K27Ac/Healthy_H3K27Ac_GRCh38_chr1.bigBed")
helChr1H3K27Me3 <- rtracklayer::import("ENCODE_peaks/H3K27Me3/Healthy_H3K27Me3_GRCh38_chr1.bigBed")
peaks <- c(disChr1H3K4Me3, disChr1H3K9Me3, disChr1H3K27Ac, disChr1H3K27Me3)
regionUpset(peaks)
names(peaks) <- c("1", "2", "3", "4")
regionUpset(peaks)
peaks
peaks <- list(disChr1H3K4Me3, disChr1H3K9Me3, disChr1H3K27Ac, disChr1H3K27Me3)
regionUpset(peaks)
peaks
disChr1H3K4Me3 <- rtracklayer::import("ENCODE_peaks/H3K4Me3/Diseased_H3K4Me3_GRCh38_chr1.bigBed")
disChr1H3K9Me3 <- rtracklayer::import("ENCODE_peaks/H3K9Me3/Diseased_H3K9Me3_GRCh38_chr1.bigBed")
disChr1H3K27Ac <- rtracklayer::import("ENCODE_peaks/H3K27Ac/Diseased_H3K27Ac_GRCh38_chr1.bigBed")
disChr1H3K27Me3 <- rtracklayer::import("ENCODE_peaks/H3K27Me3/Diseased_H3K27Me3_GRCh38_chr1.bigBed")
helChr1H3K4Me3 <- rtracklayer::import("ENCODE_peaks/H3K4Me3/Healthy_H3K4Me3_GRCh38_chr1.bigBed")
helChr1H3K9Me3 <- rtracklayer::import("ENCODE_peaks/H3K9Me3/Healthy_H3K9Me3_GRCh38_chr1.bigBed")
helChr1H3K27Ac <- rtracklayer::import("ENCODE_peaks/H3K27Ac/Healthy_H3K27Ac_GRCh38_chr1.bigBed")
helChr1H3K27Me3 <- rtracklayer::import("ENCODE_peaks/H3K27Me3/Healthy_H3K27Me3_GRCh38_chr1.bigBed")
peaks <- list(disChr1H3K4Me3, disChr1H3K9Me3, disChr1H3K27Ac, disChr1H3K27Me3)
names(peaks) <- c("1", "2", "3", "4")
regionUpset(peaks)
View(peaks)
?overlapsAny
disChr1H3K4Me3 <- rtracklayer::import("ENCODE_peaks/H3K4Me3/Diseased_H3K4Me3_GRCh38_chr1.bigBed")
helChr1H3K4Me3 <- rtracklayer::import("ENCODE_peaks/H3K4Me3/Healthy_H3K4Me3_GRCh38_chr1.bigBed")
disChr1H3K4Me3 <- rtracklayer::import("ENCODE_peaks/H3K4Me3/Diseased_H3K4Me3_GRCh38_chr1.bigBed")
helChr1H3K4Me3 <- rtracklayer::import("ENCODE_peaks/H3K4Me3/Healthy_H3K4Me3_GRCh38_chr1.bigBed")
overlaps <- overlapsAny(disChr1H3K4Me3, helChr1H3K4Me3)
overlaps
overlaps[1]
disChr1H3K4Me3[overlaps]
table(overlaps)
disChr1H3K4Me3 <- rtracklayer::import("ENCODE_peaks/H3K4Me3/Diseased_H3K4Me3_GRCh38_chr1.bigBed")
helChr1H3K4Me3 <- rtracklayer::import("ENCODE_peaks/H3K4Me3/Healthy_H3K4Me3_GRCh38_chr1.bigBed")
overlaps <- overlapsAny(disChr1H3K4Me3, helChr1H3K4Me3)
table(overlaps)
disChr1H3K4Me3 <- rtracklayer::import("ENCODE_peaks/H3K4Me3/Diseased_H3K4Me3_GRCh38_chr1.bigBed")
helChr1H3K4Me3 <- rtracklayer::import("ENCODE_peaks/H3K4Me3/Healthy_H3K4Me3_GRCh38_chr1.bigBed")
overlaps <- overlapsAny(disChr1H3K4Me3, helChr1H3K4Me3)
table(overlaps)
nonOverlaps <- !overlaps
table(nonOverlaps)
disChr1H3K4Me3 <- rtracklayer::import("ENCODE_peaks/H3K4Me3/Diseased_H3K4Me3_GRCh38_chr1.bigBed")
helChr1H3K4Me3 <- rtracklayer::import("ENCODE_peaks/H3K4Me3/Healthy_H3K4Me3_GRCh38_chr1.bigBed")
overlaps <- overlapsAny(disChr1H3K4Me3, helChr1H3K4Me3)
table(overlaps)
nonOverlaps <- !overlaps
table(nonOverlaps)
nonOverlapsPeaks <- disChr1H3K4Me3[nonOverlaps]
length(nonOverlapsPeaks)
disChr1H3K4Me3 <- rtracklayer::import("ENCODE_peaks/H3K4Me3/Diseased_H3K4Me3_GRCh38_chr1.bigBed")
helChr1H3K4Me3 <- rtracklayer::import("ENCODE_peaks/H3K4Me3/Healthy_H3K4Me3_GRCh38_chr1.bigBed")
overlaps <- overlapsAny(disChr1H3K4Me3, helChr1H3K4Me3)
table(overlaps)
nonOverlaps <- !overlaps
table(nonOverlaps)
nonOverlapsPeaks <- disChr1H3K4Me3[nonOverlaps]
length(nonOverlapsPeaks)
rtracklayer::export(nonOverlapsPeaks, "ENCODE_peaks/H3K4Me3/Diseased_Exclusive_H3K4Me3_chr1.bigBed")
disChr1H3K4Me3 <- rtracklayer::import("ENCODE_peaks/H3K4Me3/Diseased_H3K4Me3_GRCh38_chr1.bigBed")
helChr1H3K4Me3 <- rtracklayer::import("ENCODE_peaks/H3K4Me3/Healthy_H3K4Me3_GRCh38_chr1.bigBed")
overlaps <- overlapsAny(disChr1H3K4Me3, helChr1H3K4Me3)
table(overlaps)
nonOverlaps <- !overlaps
table(nonOverlaps)
nonOverlapsPeaks <- disChr1H3K4Me3[nonOverlaps]
length(nonOverlapsPeaks)
rtracklayer::export(nonOverlapsPeaks, "ENCODE_peaks/H3K4Me3/Diseased_Exclusive_H3K4Me3_GRCh38_chr1.bigBed")
disChr1H3K4Me3 <- rtracklayer::import("ENCODE_peaks/H3K4Me3/Diseased_H3K4Me3_GRCh38_chr1.bigBed")
helChr1H3K4Me3 <- rtracklayer::import("ENCODE_peaks/H3K4Me3/Healthy_H3K4Me3_GRCh38_chr1.bigBed")
overlaps <- overlapsAny(disChr1H3K4Me3, helChr1H3K4Me3)
table(overlaps)
nonOverlaps <- !overlaps
table(nonOverlaps)
nonOverlapsPeaks <- disChr1H3K4Me3[nonOverlaps]
length(nonOverlapsPeaks)
rtracklayer::export(nonOverlapsPeaks, "test_chr1.bigBed")
nonOverlapsPeaks
disChr1H3K4Me3
disChr1H3K27Ac
disChr1H3K4Me3 <- rtracklayer::import("ENCODE_peaks/H3K4Me3/Diseased_H3K4Me3_GRCh38_chr1.bigBed")
helChr1H3K4Me3 <- rtracklayer::import("ENCODE_peaks/H3K4Me3/Healthy_H3K4Me3_GRCh38_chr1.bigBed")
overlaps <- overlapsAny(disChr1H3K4Me3, helChr1H3K4Me3)
table(overlaps)
nonOverlaps <- !overlaps
table(nonOverlaps)
nonOverlapsPeaks <- disChr1H3K4Me3[nonOverlaps]
length(nonOverlapsPeaks)
rtracklayer::export(nonOverlapsPeaks, "ENCODE_peaks/H3K4Me3/Diseased_Exclusive_H3K4Me3_GRCh38_chr1.bigBed")
nonOverlapsPeaks$strand
?rtracklayer::export
??export
disChr1H3K4Me3 <- rtracklayer::import("ENCODE_peaks/H3K4Me3/Diseased_H3K4Me3_GRCh38_chr1.bigBed")
helChr1H3K4Me3 <- rtracklayer::import("ENCODE_peaks/H3K4Me3/Healthy_H3K4Me3_GRCh38_chr1.bigBed")
overlaps <- overlapsAny(disChr1H3K4Me3, helChr1H3K4Me3)
table(overlaps)
nonOverlaps <- !overlaps
table(nonOverlaps)
nonOverlapsPeaks <- disChr1H3K4Me3[nonOverlaps]
length(nonOverlapsPeaks)
rtracklayer::export.bb(nonOverlapsPeaks, "ENCODE_peaks/H3K4Me3/Diseased_Exclusive_H3K4Me3_GRCh38_chr1.bigBed")
helChr1H3K27Ac
strand(disChr1H3K4Me3)
